create TABLE IF NOT EXISTS "user" (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(500) NOT NULL,
    login VARCHAR(255) NOT NULL,
    name VARCHAR(500),
    birthday DATE
);

create TABLE IF NOT EXISTS user_friendship (
    user_id INTEGER REFERENCES "user" (id) ON delete CASCADE,
    friend_id INTEGER REFERENCES "user" (id) ON delete CASCADE,
    confirmed BOOLEAN,
    PRIMARY KEY (user_id, friend_id)
);

create TABLE IF NOT EXISTS mpa (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS film (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(500) NOT NULL,
    description VARCHAR(2000),
    releaseDate DATE,
    duration INTEGER,
    mpa_id INTEGER REFERENCES mpa (id) ON delete RESTRICT
);

create TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS film_genres (
    film_id INTEGER REFERENCES film (id) ON delete CASCADE,
    genre_id INTEGER REFERENCES genres (id) ON delete RESTRICT,
    PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS film_likes (
    film_id INTEGER REFERENCES film (id) ON delete CASCADE,
    user_id INTEGER REFERENCES "user" (id) ON delete CASCADE,
    PRIMARY KEY (film_id, user_id)
);
